{"version":3,"file":"static/js/268.352fda3f.chunk.js","mappings":"0NAUA,MCVyD,GAAgBA,UDUpD,CACjBC,KAAM,aACNC,QAAS,gSAMTC,YAAa,uIACbC,YAAa,kBACbC,IAAK,wOAkBLC,QAAS,CACLC,QAAQ,EACRC,UAAW,mBACXC,MAAO,GACPC,KAAM,CAAC,CACXC,MAAO,OACPR,YAAa,gDACbS,KAAM,s3BAkCNC,MAAO,CAAC,CACRZ,KAAM,aACNG,YAAa,8BACbU,gBAAiB,gDACjBC,UAAW,GACb,CACEd,KAAM,eACNG,YAAa,qBACbW,UAAW,KAEb,CACEJ,MAAO,QACPR,YAAa,2BACbS,KAAM,6sDAsDNC,MAAO,CAAC,CACRZ,KAAM,aACNG,YAAa,8BACbU,gBAAiB,gDACjBC,UAAW,GACb,CACEd,KAAM,OACNG,YAAa,OACbW,UAAW,GACb,CACEd,KAAM,eACNG,YAAa,qBACbW,UAAW,KAEb,CACEJ,MAAO,WACPR,YAAa,2BACbS,KAAM,qpCAqCNC,MAAO,CAAC,CACRZ,KAAM,aACNG,YAAa,8BACbU,gBAAiB,gDACjBC,UAAW,GACb,CACEd,KAAM,OACNG,YAAa,OACbW,UAAW,GACb,CACEd,KAAM,eACNG,YAAa,qBACbW,UAAW,KAEb,CACEJ,MAAO,aACPR,YAAa,uCACbS,KAAM,4iDA2CNC,MAAO,CAAC,CACRZ,KAAM,aACNG,YAAa,8BACbU,gBAAiB,gDACjBC,UAAW,GACb,CACEd,KAAM,OACNG,YAAa,OACbW,UAAW,GACb,CACEd,KAAM,eACNG,YAAa,qBACbW,UAAW,KAEb,CACEJ,MAAO,WACPR,YAAa,2BACbS,KAAM,y9CAqDNC,MAAO,CAAC,CACRZ,KAAM,aACNG,YAAa,8BACbU,gBAAiB,gDACjBC,UAAW,GACb,CACEd,KAAM,OACNG,YAAa,OACbW,UAAW,GACb,CACEd,KAAM,eACNG,YAAa,qBACbW,UAAW,KAEb,CACEJ,MAAO,aACPR,YAAa,2BACbS,KAAM,4uCA+CNC,MAAO,CAAC,CACRZ,KAAM,aACNG,YAAa,8BACbU,gBAAiB,gDACjBC,UAAW,GACb,CACEd,KAAM,OACNG,YAAa,OACbW,UAAW,GACb,CACEd,KAAM,eACNG,YAAa,qBACbW,UAAW,KAEb,CACEJ,MAAO,cACPR,YAAa,2BACbS,KAAM,4wDA2DNC,MAAO,CAAC,CACRZ,KAAM,aACNG,YAAa,8BACbU,gBAAiB,gDACjBC,UAAW,GACb,CACEd,KAAM,OACNG,YAAa,OACbW,UAAW,GACb,CACEd,KAAM,eACNG,YAAa,qBACbW,UAAW,SCjeFC,EAAW,CAAC,KAAO,aAAa,QAAU,SAAS,gBAAe,EAAK,aAAa,cAAc,QAAU,CAAC,CAAC,KAAO,aAAa,QAAU,0CAA0C,YAAc,uIAAyB,YAAc,oB","sources":["../../README.md","../node_modules/readme/modules.js"],"sourcesContent":["import * as component_1 from '@kne/current-lib_react-file';\nimport '@kne/current-lib_react-file/dist/index.css';\nimport * as component_3 from '@kne/remote-loader';\nimport '@kne/current-lib_react-file/dist/index.css';\nimport * as component_5 from 'antd';\nimport '@kne/current-lib_react-file/dist/index.css';\nimport '@kne/current-lib_react-file/dist/index.css';\nimport '@kne/current-lib_react-file/dist/index.css';\nimport '@kne/current-lib_react-file/dist/index.css';\nimport '@kne/current-lib_react-file/dist/index.css';\nconst readmeConfig = {\n    name: `react-file`,\n    summary: `<h1>react-file</h1>\n<h3>描述</h3>\n<p>提供了文件上传，文件预览，文件批量管理等功能</p>\n<h3>安装</h3>\n<pre><code class=\"language-shell\">npm i --save @kne/react-file\n</code></pre>`,\n    description: `提供了文件上传，文件预览，文件批量管理等功能`,\n    packageName: `@kne/react-file`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `react_file_b1237`,\n        style: ``,\n        list: [{\n    title: `File`,\n    description: `从oss获取文件地址`,\n    code: `const { default: File } = _ReactFile;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['components-core:Global@PureGlobal']\n})(({ remoteModules }) => {\n  const [PureGlobal] = remoteModules;\n  return <PureGlobal preset={{\n    ajax: async api => {\n      return { data: { code: 0, data: api.loader() } };\n    }, apis: {\n      file: {\n        staticUrl: getPublicPath('react-file') || window.PUBLIC_URL,\n        getUrl: {\n          loader: async ({ params }) => {\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve('/logo192.png');\n              }, 1000);\n            });\n          }\n        }\n      }\n    }\n  }}>\n    <File id=\"123\">{({ url }) => {\n      return url;\n    }}</File>\n  </PureGlobal>;\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ReactFile\",\n    packageName: \"@kne/current-lib_react-file\",\n    importStatement: \"import * as _ReactFile from \\\"@kne/react-file\\\"\",\n    component: component_1\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n},{\n    title: `Image`,\n    description: `显示图片`,\n    code: `const { Image } = _ReactFile;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\nconst { Divider } = antd;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['components-core:Global@PureGlobal', 'components-core:InfoPage']\n})(({ remoteModules }) => {\n  const [PureGlobal, InfoPage] = remoteModules;\n  return <PureGlobal preset={{\n    ajax: async api => {\n      return { data: { code: 0, data: api.loader() } };\n    }, apis: {\n      file: {\n        staticUrl: getPublicPath('react-file') || window.PUBLIC_URL,\n        getUrl: {\n          loader: async ({ params }) => {\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve('/mock/avatar.png');\n              }, 2000);\n            });\n          }\n        }\n      }\n    }\n  }}>\n    <InfoPage>\n      <InfoPage.Part title=\"图片\">\n        <Image src=\"xxxxxx\" />\n        <Image id=\"xxxxxx\" style={{ width: 200, height: 200 }} />\n      </InfoPage.Part>\n      <InfoPage.Part title=\"头像\">\n        <Image.Avatar gender=\"F\" />\n        <Image.Avatar gender=\"M\" />\n        <Image.Avatar />\n        <Image.Avatar gender=\"F\" id=\"xxxxxx\" />\n        <Divider />\n        <Image.Avatar gender=\"F\" shape=\"square\" />\n        <Image.Avatar gender=\"M\" shape=\"square\" />\n        <Image.Avatar shape=\"square\" />\n        <Image.Avatar gender=\"F\" id=\"xxxxxx\" shape=\"square\" />\n        <Divider />\n        <Image.Avatar gender=\"F\" size={30} />\n        <Image.Avatar gender=\"M\" size={50} />\n        <Image.Avatar size={80} />\n        <Image.Avatar gender=\"F\" id=\"xxxxxx\" size={100} />\n      </InfoPage.Part>\n    </InfoPage>\n  </PureGlobal>;\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ReactFile\",\n    packageName: \"@kne/current-lib_react-file\",\n    importStatement: \"import * as _ReactFile from \\\"@kne/react-file\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_5\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n},{\n    title: `Download`,\n    description: `文件下载`,\n    code: `const { Download } = _ReactFile;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\nconst { Flex } = antd;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['components-core:Global@PureGlobal']\n})(({ remoteModules }) => {\n  const [PureGlobal] = remoteModules;\n  return <PureGlobal preset={{\n    ajax: async api => {\n      return { data: { code: 0, data: api.loader() } };\n    }, apis: {\n      file: {\n        staticUrl: getPublicPath('react-file') || window.PUBLIC_URL,\n        getUrl: {\n          loader: async ({ params }) => {\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve('/logo192.png');\n              }, 1000);\n            });\n          }\n        }\n      }\n    }\n  }}>\n    <Flex gap={8}>\n      <Download id=\"123\">下载文件</Download>\n      <Download id=\"123\" filename=\"图片\">下载文件并设置名称</Download>\n      <Download src=\"/logo192.png\" filename=\"图片\">直接通过src链接下载</Download>\n    </Flex>\n  </PureGlobal>;\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ReactFile\",\n    packageName: \"@kne/current-lib_react-file\",\n    importStatement: \"import * as _ReactFile from \\\"@kne/react-file\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_5\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n},{\n    title: `FileButton`,\n    description: `预览文件按钮`,\n    code: `const { FileButton } = _ReactFile;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['components-core:Global@PureGlobal']\n})(({ remoteModules }) => {\n  const [PureGlobal] = remoteModules;\n  return <PureGlobal preset={{\n    ajax: async api => {\n      return { data: { code: 0, data: api.loader() } };\n    }, apis: {\n      file: {\n        staticUrl: getPublicPath('react-file') || window.PUBLIC_URL,\n        getUrl: {\n          loader: async ({ params }) => {\n            const urlMap = {\n              1: '/mock/resume.png',\n              2: '/mock/resume.pdf',\n              3: '/mock/resume.html',\n              4: '/mock/resume.txt',\n              5: '/mock/audio.wav',\n              6: '/mock/resume.docx'\n            };\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve(urlMap[params.id]);\n              }, 1000);\n            });\n          }\n        }\n      }\n    }\n  }}>\n    <FileButton id=\"1\" filename=\"demo.jpg\" openPrint modalProps={{ width: 800 }}>预览demo.jpg</FileButton>\n    <FileButton id=\"2\" filename=\"demo2.pdf\" openPrint modalProps={{ width: 800 }}>预览demo2.pdf</FileButton>\n    <FileButton id=\"3\" filename=\"demo2.html\" openPrint modalProps={{ width: 800 }}>预览demo2.html</FileButton>\n    <FileButton id=\"6\" filename=\"resume.docx\" openPrint modalProps={{ width: 800 }} type=\"link\">resume.docx</FileButton>\n  </PureGlobal>;\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ReactFile\",\n    packageName: \"@kne/current-lib_react-file\",\n    importStatement: \"import * as _ReactFile from \\\"@kne/react-file\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_5\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n},{\n    title: `FileList`,\n    description: `文件列表`,\n    code: `const { FileList } = _ReactFile;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\nconst { Divider } = antd;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['components-core:Global@PureGlobal']\n})(({ remoteModules }) => {\n  const [PureGlobal] = remoteModules;\n  return <PureGlobal preset={{\n    ajax: async api => {\n      return { data: { code: 0, data: api.loader() } };\n    }, apis: {\n      file: {\n        staticUrl: getPublicPath('react-file') || window.PUBLIC_URL,\n        getUrl: {\n          loader: async ({ params }) => {\n            const urlMap = {\n              1: '/mock/resume.png',\n              2: '/mock/resume.pdf',\n              3: '/mock/resume.html',\n              4: '/mock/resume.txt',\n              5: '/mock/audio.wav',\n              6: '/mock/resume.docx'\n            };\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve(urlMap[params.id]);\n              }, 1000);\n            });\n          }\n        }\n      }\n    }\n  }}>\n    <FileList dataSource={[{\n      uuid: '121233',\n      type: 'uploading',\n      filename: '张三的简历.doc'\n    },\n      {\n        id: '2',\n        filename: '我是一份简历.pdf',\n        date: '2022-07-15T11:09:15.000+08:00',\n        userName: '用户名'\n      }]} />\n    <Divider />\n    <FileList dataSource={[]} />\n  </PureGlobal>;\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ReactFile\",\n    packageName: \"@kne/current-lib_react-file\",\n    importStatement: \"import * as _ReactFile from \\\"@kne/react-file\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_5\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n},{\n    title: `FileUpload`,\n    description: `文件上传`,\n    code: `const { FileUpload } = _ReactFile;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\n\nconst urls = {};\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['components-core:Global@PureGlobal']\n})(({ remoteModules }) => {\n  const [PureGlobal] = remoteModules;\n  return <PureGlobal preset={{\n    ajax: async api => {\n      return { data: { code: 0, data: api.loader() } };\n    }, apis: {\n      file: {\n        staticUrl: getPublicPath('react-file') || window.PUBLIC_URL,\n        getUrl: {\n          loader: async ({ params }) => {\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve(urls[params.id]);\n              }, 1000);\n            });\n          }\n        }, upload: ({ file }) => {\n          urls[file.name] = URL.createObjectURL(file);\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0, data: {\n                    id: file.name, filename: file.name\n                  }\n                }\n              });\n            }, 1000);\n          });\n        }\n      }\n    }\n  }}>\n    <FileUpload />\n  </PureGlobal>;\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ReactFile\",\n    packageName: \"@kne/current-lib_react-file\",\n    importStatement: \"import * as _ReactFile from \\\"@kne/react-file\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_5\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n},{\n    title: `FilePreview`,\n    description: `文件预览`,\n    code: `const { FilePreview } = _ReactFile;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['components-core:Global@PureGlobal', 'components-core:InfoPage']\n})(({ remoteModules }) => {\n  const [PureGlobal, InfoPage] = remoteModules;\n  return <PureGlobal preset={{\n    ajax: async api => {\n      return { data: { code: 0, data: api.loader() } };\n    }, apis: {\n      file: {\n        staticUrl: getPublicPath('react-file') || window.PUBLIC_URL, getUrl: {\n          loader: async ({ params }) => {\n            const urlMap = {\n              1: '/mock/resume.png',\n              2: '/mock/resume.pdf',\n              3: '/mock/resume.html',\n              4: '/mock/resume.txt',\n              5: '/mock/audio.wav',\n              6: '/mock/resume.docx'\n            };\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve(urlMap[params.id]);\n              }, 1000);\n            });\n          }\n        }\n      }\n    }\n  }}>\n    <InfoPage>\n      <InfoPage.Part title=\"预览图片\">\n        <FilePreview id=\"1\" />\n      </InfoPage.Part>\n      <InfoPage.Part title=\"预览PDF\">\n        <FilePreview id=\"2\" />\n      </InfoPage.Part>\n      <InfoPage.Part title=\"预览HTML\">\n        <FilePreview id=\"3\" />\n      </InfoPage.Part>\n      <InfoPage.Part title=\"预览TXT\">\n        <FilePreview id=\"4\" />\n      </InfoPage.Part>\n      <InfoPage.Part title=\"预览AUDIO\">\n        <FilePreview id=\"5\" />\n      </InfoPage.Part>\n      <InfoPage.Part title=\"预览OFFICE\">\n        <FilePreview id=\"6\" />\n      </InfoPage.Part>\n    </InfoPage>\n\n  </PureGlobal>;\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ReactFile\",\n    packageName: \"@kne/current-lib_react-file\",\n    importStatement: \"import * as _ReactFile from \\\"@kne/react-file\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_5\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import ReactFile from '@components/react-file/README.md';export default {ReactFile};\nexport const manifest = {\"name\":\"react-file\",\"version\":\"0.1.15\",\"open-version\":true,\"public-url\":\"/react-file\",\"modules\":[{\"name\":\"react-file\",\"baseDir\":\"/home/runner/work/react-file/react-file\",\"description\":\"提供了文件上传，文件预览，文件批量管理等功能\",\"packageName\":\"@kne/react-file\"}]};"],"names":["ReactFile","name","summary","description","packageName","api","example","isFull","className","style","list","title","code","scope","importStatement","component","manifest"],"sourceRoot":""}