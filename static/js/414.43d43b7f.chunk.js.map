{"version":3,"file":"static/js/414.43d43b7f.chunk.js","mappings":"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","sources":["../node_modules/@babel/standalone|sync","../../README.md","preset.js","App.js","bootstrap.js"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 25764;\nmodule.exports = webpackEmptyContext;","import * as component_1 from '@kne/current-lib_react-file';\nimport '@kne/current-lib_react-file/dist/index.css';\nimport * as component_3 from '@kne/remote-loader';\nimport '@kne/current-lib_react-file/dist/index.css';\nimport * as component_5 from 'antd';\nimport '@kne/current-lib_react-file/dist/index.css';\nimport '@kne/current-lib_react-file/dist/index.css';\nimport '@kne/current-lib_react-file/dist/index.css';\nimport '@kne/current-lib_react-file/dist/index.css';\nimport '@kne/current-lib_react-file/dist/index.css';\nconst readmeConfig = {\n    name: `react-file`,\n    summary: `<h1>react-file</h1>\n<h3>描述</h3>\n<p>提供了文件上传，文件预览，文件批量管理等功能</p>\n<h3>安装</h3>\n<pre><code class=\"language-shell\">npm i --save @kne/react-file\n</code></pre>`,\n    description: `提供了文件上传，文件预览，文件批量管理等功能`,\n    packageName: `@kne/react-file`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `react_file_b1237`,\n        style: ``,\n        list: [{\n    title: `File`,\n    description: `从oss获取文件地址`,\n    code: `const { default: File } = _ReactFile;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['components-core:Global@PureGlobal']\n})(({ remoteModules }) => {\n  const [PureGlobal] = remoteModules;\n  return <PureGlobal preset={{\n    ajax: async api => {\n      return { data: { code: 0, data: api.loader() } };\n    }, apis: {\n      file: {\n        staticUrl: getPublicPath('react-file') || window.PUBLIC_URL,\n        getUrl: {\n          loader: async ({ params }) => {\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve('/logo192.png');\n              }, 1000);\n            });\n          }\n        }\n      }\n    }\n  }}>\n    <File id=\"123\">{({ url }) => {\n      return url;\n    }}</File>\n  </PureGlobal>;\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ReactFile\",\n    packageName: \"@kne/current-lib_react-file\",\n    importStatement: \"import * as _ReactFile from \\\"@kne/react-file\\\"\",\n    component: component_1\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n},{\n    title: `Image`,\n    description: `显示图片`,\n    code: `const { Image } = _ReactFile;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\nconst { Divider } = antd;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['components-core:Global@PureGlobal', 'components-core:InfoPage']\n})(({ remoteModules }) => {\n  const [PureGlobal, InfoPage] = remoteModules;\n  return <PureGlobal preset={{\n    ajax: async api => {\n      return { data: { code: 0, data: api.loader() } };\n    }, apis: {\n      file: {\n        staticUrl: getPublicPath('react-file') || window.PUBLIC_URL,\n        getUrl: {\n          loader: async ({ params }) => {\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve('/mock/avatar.png');\n              }, 2000);\n            });\n          }\n        }\n      }\n    }\n  }}>\n    <InfoPage>\n      <InfoPage.Part title=\"图片\">\n        <Image src=\"xxxxxx\" />\n        <Image id=\"xxxxxx\" style={{ width: 200, height: 200 }} />\n      </InfoPage.Part>\n      <InfoPage.Part title=\"头像\">\n        <Image.Avatar gender=\"F\" />\n        <Image.Avatar gender=\"M\" />\n        <Image.Avatar />\n        <Image.Avatar gender=\"F\" id=\"xxxxxx\" />\n        <Divider />\n        <Image.Avatar gender=\"F\" shape=\"square\" />\n        <Image.Avatar gender=\"M\" shape=\"square\" />\n        <Image.Avatar shape=\"square\" />\n        <Image.Avatar gender=\"F\" id=\"xxxxxx\" shape=\"square\" />\n        <Divider />\n        <Image.Avatar gender=\"F\" size={30} />\n        <Image.Avatar gender=\"M\" size={50} />\n        <Image.Avatar size={80} />\n        <Image.Avatar gender=\"F\" id=\"xxxxxx\" size={100} />\n      </InfoPage.Part>\n    </InfoPage>\n  </PureGlobal>;\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ReactFile\",\n    packageName: \"@kne/current-lib_react-file\",\n    importStatement: \"import * as _ReactFile from \\\"@kne/react-file\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_5\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n},{\n    title: `Download`,\n    description: `文件下载`,\n    code: `const { Download } = _ReactFile;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\nconst { Flex } = antd;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['components-core:Global@PureGlobal']\n})(({ remoteModules }) => {\n  const [PureGlobal] = remoteModules;\n  return <PureGlobal preset={{\n    ajax: async api => {\n      return { data: { code: 0, data: api.loader() } };\n    }, apis: {\n      file: {\n        staticUrl: getPublicPath('react-file') || window.PUBLIC_URL,\n        getUrl: {\n          loader: async ({ params }) => {\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve('/logo192.png');\n              }, 1000);\n            });\n          }\n        }\n      }\n    }\n  }}>\n    <Flex gap={8}>\n      <Download id=\"123\">下载文件</Download>\n      <Download id=\"123\" filename=\"图片\">下载文件并设置名称</Download>\n      <Download src=\"/logo192.png\" filename=\"图片\">直接通过src链接下载</Download>\n    </Flex>\n  </PureGlobal>;\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ReactFile\",\n    packageName: \"@kne/current-lib_react-file\",\n    importStatement: \"import * as _ReactFile from \\\"@kne/react-file\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_5\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n},{\n    title: `FileButton`,\n    description: `预览文件按钮`,\n    code: `const { FileButton } = _ReactFile;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['components-core:Global@PureGlobal']\n})(({ remoteModules }) => {\n  const [PureGlobal] = remoteModules;\n  return <PureGlobal preset={{\n    ajax: async api => {\n      return { data: { code: 0, data: api.loader() } };\n    }, apis: {\n      file: {\n        staticUrl: getPublicPath('react-file') || window.PUBLIC_URL,\n        getUrl: {\n          loader: async ({ params }) => {\n            const urlMap = {\n              1: '/mock/resume.png',\n              2: '/mock/resume.pdf',\n              3: '/mock/resume.html',\n              4: '/mock/resume.txt',\n              5: '/mock/audio.wav',\n              6: '/mock/resume.docx'\n            };\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve(urlMap[params.id]);\n              }, 1000);\n            });\n          }\n        }\n      }\n    }\n  }}>\n    <FileButton id=\"1\" filename=\"demo.jpg\" modalProps={{ width: 800 }}>预览demo.jpg</FileButton>\n    <FileButton id=\"2\" filename=\"demo2.pdf\" modalProps={{ width: 800 }}>预览demo2.pdf</FileButton>\n    <FileButton id=\"3\" filename=\"demo2.html\" modalProps={{ width: 800 }}>预览demo2.html</FileButton>\n    <FileButton id=\"6\" filename=\"resume.docx\" modalProps={{ width: 800 }} type=\"link\">resume.docx</FileButton>\n  </PureGlobal>;\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ReactFile\",\n    packageName: \"@kne/current-lib_react-file\",\n    importStatement: \"import * as _ReactFile from \\\"@kne/react-file\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_5\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n},{\n    title: `FileList`,\n    description: `文件列表`,\n    code: `const { FileList } = _ReactFile;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\nconst { Divider } = antd;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['components-core:Global@PureGlobal']\n})(({ remoteModules }) => {\n  const [PureGlobal] = remoteModules;\n  return <PureGlobal preset={{\n    ajax: async api => {\n      return { data: { code: 0, data: api.loader() } };\n    }, apis: {\n      file: {\n        staticUrl: getPublicPath('react-file') || window.PUBLIC_URL,\n        getUrl: {\n          loader: async ({ params }) => {\n            const urlMap = {\n              1: '/mock/resume.png',\n              2: '/mock/resume.pdf',\n              3: '/mock/resume.html',\n              4: '/mock/resume.txt',\n              5: '/mock/audio.wav',\n              6: '/mock/resume.docx'\n            };\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve(urlMap[params.id]);\n              }, 1000);\n            });\n          }\n        }\n      }\n    }\n  }}>\n    <FileList dataSource={[{\n      uuid: '121233',\n      type: 'uploading',\n      filename: '张三的简历.doc'\n    },\n      {\n        id: '2',\n        filename: '我是一份简历.pdf',\n        date: '2022-07-15T11:09:15.000+08:00',\n        userName: '用户名'\n      }]} />\n    <Divider />\n    <FileList dataSource={[]} />\n  </PureGlobal>;\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ReactFile\",\n    packageName: \"@kne/current-lib_react-file\",\n    importStatement: \"import * as _ReactFile from \\\"@kne/react-file\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_5\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n},{\n    title: `FileUpload`,\n    description: `文件上传`,\n    code: `const { FileUpload } = _ReactFile;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\n\nconst urls = {};\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['components-core:Global@PureGlobal']\n})(({ remoteModules }) => {\n  const [PureGlobal] = remoteModules;\n  return <PureGlobal preset={{\n    ajax: async api => {\n      return { data: { code: 0, data: api.loader() } };\n    }, apis: {\n      file: {\n        staticUrl: getPublicPath('react-file') || window.PUBLIC_URL,\n        getUrl: {\n          loader: async ({ params }) => {\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve(urls[params.id]);\n              }, 1000);\n            });\n          }\n        }, upload: ({ file }) => {\n          urls[file.name] = URL.createObjectURL(file);\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0, data: {\n                    id: file.name, filename: file.name\n                  }\n                }\n              });\n            }, 1000);\n          });\n        }\n      }\n    }\n  }}>\n    <FileUpload />\n  </PureGlobal>;\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ReactFile\",\n    packageName: \"@kne/current-lib_react-file\",\n    importStatement: \"import * as _ReactFile from \\\"@kne/react-file\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_5\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n},{\n    title: `FilePreview`,\n    description: `文件预览`,\n    code: `const { FilePreview } = _ReactFile;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['components-core:Global@PureGlobal', 'components-core:InfoPage']\n})(({ remoteModules }) => {\n  const [PureGlobal, InfoPage] = remoteModules;\n  return <PureGlobal preset={{\n    ajax: async api => {\n      return { data: { code: 0, data: api.loader() } };\n    }, apis: {\n      file: {\n        staticUrl: getPublicPath('react-file') || window.PUBLIC_URL, getUrl: {\n          loader: async ({ params }) => {\n            const urlMap = {\n              1: '/mock/resume.png',\n              2: '/mock/resume.pdf',\n              3: '/mock/resume.html',\n              4: '/mock/resume.txt',\n              5: '/mock/audio.wav',\n              6: '/mock/resume.docx'\n            };\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve(urlMap[params.id]);\n              }, 1000);\n            });\n          }\n        }\n      }\n    }\n  }}>\n    <InfoPage>\n      <InfoPage.Part title=\"预览图片\">\n        <FilePreview id=\"1\" />\n      </InfoPage.Part>\n      <InfoPage.Part title=\"预览PDF\">\n        <FilePreview id=\"2\" />\n      </InfoPage.Part>\n      <InfoPage.Part title=\"预览HTML\">\n        <FilePreview id=\"3\" />\n      </InfoPage.Part>\n      <InfoPage.Part title=\"预览TXT\">\n        <FilePreview id=\"4\" />\n      </InfoPage.Part>\n      <InfoPage.Part title=\"预览AUDIO\">\n        <FilePreview id=\"5\" />\n      </InfoPage.Part>\n      <InfoPage.Part title=\"预览OFFICE\">\n        <FilePreview id=\"6\" />\n      </InfoPage.Part>\n    </InfoPage>\n\n  </PureGlobal>;\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ReactFile\",\n    packageName: \"@kne/current-lib_react-file\",\n    importStatement: \"import * as _ReactFile from \\\"@kne/react-file\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_5\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import React from 'react';\nimport {preset as fetchPreset} from '@kne/react-fetch';\nimport {Spin, Empty, message} from 'antd';\nimport axios from 'axios';\nimport {preset as remoteLoaderPreset} from '@kne/remote-loader';\nimport omit from 'lodash/omit';\n\nwindow.PUBLIC_URL = process.env.PUBLIC_URL;\n\n// url: 'https://registry.npmmirror.com',\n// tpl: '{{url}}/@kne-components%2f{{remote}}/{{version}}/files/build',\n\n// url: 'https://cdn.jsdelivr.net', tpl: '{{url}}/npm/@kne-components/{{remote}}@{{version}}/build'\n\nconst registry = {\n    url: \"https://uc.fatalent.cn\", tpl: \"{{url}}/packages/@kne-components/{{remote}}/{{version}}/build\"\n};\n\nconst componentsCoreRemote = {\n    ...registry, remote: 'components-core', defaultVersion: '0.2.65'\n};\n\nremoteLoaderPreset({\n    remotes: {\n        default: componentsCoreRemote, 'components-core': componentsCoreRemote, 'components-iconfont': {\n            ...registry, remote: 'components-iconfont', defaultVersion: '0.1.8'\n        }, 'react-file': process.env.NODE_ENV === 'development' ? {\n            remote: 'react-file', url: '/', tpl: '{{url}}'\n        } : {\n            ...registry, remote: 'react-file', defaultVersion: process.env.DEFAULT_VERSION\n        }\n    }\n});\n\nexport const ajax = (() => {\n    const instance = axios.create({\n        validateStatus: function () {\n            return true;\n        }\n    });\n\n    return (params) => {\n        if (params.hasOwnProperty('loader') && typeof params.loader === 'function') {\n            return Promise.resolve(params.loader(omit(params, ['loader']))).then((data) => ({\n                data: {\n                    code: 0, data\n                }\n            })).catch((err) => {\n                message.error(err.message || '请求发生错误');\n                return {data: {code: 500, msg: err.message}};\n            });\n        }\n        return instance(params);\n    };\n})();\n\n\nfetchPreset({\n    ajax,\n    loading: <Spin delay={500}\n                   style={{position: 'absolute', left: '50%', padding: '10px', transform: 'translateX(-50%)'}}/>,\n    error: null,\n    empty: <Empty/>,\n    transformResponse: (response) => {\n        const {data} = response;\n        response.data = {\n            code: data.code === 0 ? 200 : data.code, msg: data.msg, results: data.data\n        };\n        return response;\n    }\n});\n","import { HashRouter } from \"react-router-dom\";\nimport createEntry from \"@kne/modules-dev/dist/create-entry\";\nimport \"@kne/modules-dev/dist/create-entry.css\";\nimport readme from \"readme\";\n\nconst ExampleRoutes = createEntry.ExampleRoutes;\n\nconst App = ({ preset, themeToken, ...props }) => {\n  return (\n      <HashRouter>\n        <ExampleRoutes\n            {...props}\n            paths={[\n              {\n                key: \"components\",\n                path: \"/\",\n                title: \"首页\",\n              },\n            ]}\n            preset={preset}\n            themeToken={themeToken}\n            readme={readme}\n            pageProps={{ menu: null }}\n        />\n      </HashRouter>\n  );\n};\n\nexport default App;\n","import { ajax } from \"./preset\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nconst themeToken = {\n  colorPrimary: \"#4F185A\",\n};\n\nroot.render(\n    <React.StrictMode>\n      <App preset={{ ajax }} themeToken={themeToken} />\n    </React.StrictMode>\n);\n"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","name","summary","description","packageName","api","example","isFull","className","style","list","title","scope","importStatement","component","window","PUBLIC_URL","process","registry","url","tpl","componentsCoreRemote","remote","defaultVersion","remoteLoaderPreset","remotes","default","ajax","instance","axios","validateStatus","params","hasOwnProperty","loader","Promise","omit","then","data","catch","err","message","error","msg","fetchPreset","loading","_jsx","Spin","delay","position","left","padding","transform","empty","Empty","transformResponse","response","results","ExampleRoutes","createEntry","_ref","preset","themeToken","props","HashRouter","children","paths","key","path","readme","pageProps","menu","ReactDOM","document","getElementById","render","React","App","colorPrimary"],"sourceRoot":""}